resources:
  - name: repo-develop
    type: git
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: develop
      private_key: {{github-private-key}}
    check_every: 10s
  # 'release' branch is assumes to exists always.
  # this is diffrent from standard git-flow
  - name: repo-release
    type: git
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: release
      private_key: {{github-private-key}}
    check_every: 10s
  - name: repo-master
    type: git
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: master
      private_key: {{github-private-key}}
      # mastser should process all commits
      # that means this resource will ignore commit with
      # messages containing [ci skip].
      # [ci skip] prevents from unnecessary triggers on test-develop
      # and test-release when some release commit will be merged on
      # these branch.
      disable_ci_skip: true
    check_every: 10s
  - name: release-version
    type: semver
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: release-version
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 0.0.0
  - name: develop-version
    type: semver
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: develop-version
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 0.0.0
  - name: sbt-ivy-cache
    type: docker-image
    source:
      repository: {{sbt-ivy-cache-repo}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}
      email: {{docker-hub-email}}
  # we need these two extra repo-???-push resource to ignore
  # [ci skip] commits on normal repo-??? resources above.
  # see: https://github.com/concourse/git-resource/issues/18#issuecomment-208971885
  - name: repo-develop-push
    type: git
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: develop
      private_key: {{github-private-key}}
      disable_ci_skip: true
    check_every: 10s
  - name: repo-release-push
    type: git
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: release
      private_key: {{github-private-key}}
      disable_ci_skip: true
    check_every: 10s
  # general repo resource for sbt-ivy-cache
  # pipeline-view on web would be more messy when when repo-develop was re-used
  - name: repo
    type: git
    source:
      uri: git@github.com:everpeace/akka-http-microservice
      branch: develop
      private_key: {{github-private-key}}
    check_every: 10s

jobs:
  # continuous integration for develop branch
  - name: test-develop
    serial: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-develop
          trigger: true
        - get: sbt-ivy-cache
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: deploy-develop
    serial: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-develop
          passed: [ test-develop ]
          trigger: true
        - get: sbt-ivy-cache
      - task: publish-docker-image
        file: repo/ci/tasks/build-docker-image.yml
        attempts: {{attempts}}
        # params:
        # DOCKER_REGISTORY: hogehoge
      - task: deploy-to-dev-kube
        file: repo/ci/tasks/deploy-to-kube.yml
        attempts: {{attempts}}
        params:
          KUBE_SERVER: hogehoge
          KUBE_NAMESPACE: hogehoge
          KUBE_USER: hogehoge
          KUBE_PASS: hoge
          MANIFEST_PATH: repo/manifest.yml



  - name: create-release-candidate-from-develop
    serial: true
    serial_groups: [ release-version, develop-version ]
    plan:
      - aggregate:
        - get: repo-develop
        - get: repo-develop-push
        - get: repo-release
        - get: repo-release-push
        - get: develop-version
          params: { bump: final, pre: rc }
      - task: merge-develop-to-release
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: getourneau/alpine-bash-git
          inputs:
            - name: repo-develop-push
              path: repo-target
            - name: repo-release-push
              path: repo
          outputs:
            - name: out
          run:
            path: /bin/bash
            args:
            - repo-target/ci/tasks/merge-branch.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-release-push
        params:
          repository: out
      - task: commit-rc-version-to-release
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: getourneau/alpine-bash-git
          inputs:
            - name: repo-release-push
              path: repo
            - name: develop-version
              path: version
          outputs:
            - name: out
            - name: out-version
          run:
            path: /bin/bash
            args:
              - repo/ci/tasks/bump-version.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          CI_SKIP: false
      - put: repo-release-push
        params:
          repository: out
      - put: release-version
        params: { file: out-version/number }
      - get: develop-version
        params: { bump: patch, pre: alpha }
      - task: bump-next-develop-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: getourneau/alpine-bash-git
          inputs:
            - name: repo-develop-push
              path: repo
            - name: develop-version
              path: version
          outputs:
            - name: out
            - name: out-version
          run:
            path: /bin/bash
            args:
              - repo/ci/tasks/bump-version.sh
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          VERSION_POSTFIX: "-SNAPSHOT"
      - put: repo-develop-push
        params:
          repository: out
      - put: develop-version
        params: { bump: patch, pre: alpha }

  - name: test-release
    serial: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-release
          trigger: true
        - get: sbt-ivy-cache
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: deploy-staging
    serial: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-release
          passed: [ test-release ]
          trigger: true
        - get: sbt-ivy-cache
      - task: publish-docker-image
        file: repo/ci/tasks/build-docker-image.yml
        attempts: {{attempts}}
        # params:
        #   DOCKER_REGISTORY: hogehoge
      - task: deploy-to-dev-kube
        file: repo/ci/tasks/deploy-to-kube.yml
        attempts: {{attempts}}
        params:
          KUBE_SERVER: hogehoge
          KUBE_NAMESPACE: hogehoge
          KUBE_USER: hogehoge
          KUBE_PASS: hoge
          MANIFEST_PATH: repo/manifest.yml



  - name: bump-alpha-version
    serial: true
    serial_groups: [ develop-version ]
    plan:
      - aggregate:
        - get: version
          resource: develop-version
          params: { pre: alpha }
        - get: repo
          resource: repo-develop-push
      - task: bump-alpha-version-on-develop
        file: repo/ci/tasks/bump-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          VERSION_POSTFIX: "-SNAPSHOT"
      - put: repo
        resource: repo-develop-push
        params:
          repository: out
      - put: version
        resource: develop-version
        params: { pre: alpha }

  - name: bump-patch-version
    serial: true
    serial_groups: [ develop-version ]
    plan:
      - aggregate:
        - get: version
          resource: develop-version
          params: { bump: patch, pre: alpha }
        - get: repo
          resource: repo-develop-push
      - task: bump-patch-version-on-develop
        file: repo/ci/tasks/bump-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          VERSION_POSTFIX: "-SNAPSHOT"
      - put: repo
        resource: repo-develop-push
        params:
          repository: out
      - put: version
        resource: develop-version
        params: { bump: patch, pre: alpha }

  - name: bump-minor-version
    serial: true
    serial_groups: [ develop-version ]
    plan:
      - aggregate:
        - get: version
          resource: develop-version
          params: { bump: minor, pre: alpha }
        - get: repo
          resource: repo-develop-push
      - task: bump-minor-version-on-develop
        file: repo/ci/tasks/bump-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          VERSION_POSTFIX: "-SNAPSHOT"
      - put: repo
        resource: repo-develop-push
        params:
          repository: out
      - put: version
        resource: develop-version
        params: { bump: minor, pre: alpha }

  - name: bump-major-version
    serial: true
    serial_groups: [ develop-version ]
    plan:
      - aggregate:
        - get: version
          resource: develop-version
          params: { bump: major, pre: alpha }
        - get: repo
          resource: repo-develop-push
      - task: bump-major-version-on-develop
        file: repo/ci/tasks/bump-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
          VERSION_POSTFIX: "-SNAPSHOT"
      - put: repo
        resource: repo-develop-push
        params:
          repository: out
      - put: version
        resource: develop-version
        params: { bump: major, pre: alpha }
